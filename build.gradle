/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.9/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}


apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    compile 'com.fasterxml.jackson.core:jackson-core:2.4.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.3'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.20'
    compile 'com.github.everit-org.json-schema:org.everit.json.schema:1.11.1'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'https://jitpack.io' }
}

task(genRpcProcessor, dependsOn: 'classes', type: JavaExec) {
   main = 'org.aion.api.codegen.GenerateRpcProcessor'
   classpath = sourceSets.main.runtimeClasspath
}

task(genRpcInterface, dependsOn: 'classes', type: JavaExec) {
   main = 'org.aion.api.codegen.GenerateRpcInterface'
   classpath = sourceSets.main.runtimeClasspath
}

task generateAll {
    dependsOn genRpcProcessor
    dependsOn genRpcInterface
}
